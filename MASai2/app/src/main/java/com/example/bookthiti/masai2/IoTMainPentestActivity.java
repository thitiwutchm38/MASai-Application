package com.example.bookthiti.masai2;

import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.IBinder;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ImageButton;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.example.bookthiti.masai2.service.BluetoothManagementService;

public class IoTMainPentestActivity extends AppCompatActivity {
    private final static String TAG_INFO = "Log info";
    private final static String TAG_DEBUG = "Log debug";
    private final static String TAG_ERROR = "Log error";

    private ImageButton button_setting;
    private ImageButton button_device_att;
    private ImageButton button_router_att;
    private ImageButton button_bluetooth_att;

    private Context mContext;

    private BluetoothManagementService mBluetoothManagementService;
    private boolean mBound = false;
    private boolean isRemoteDeviceConnected = false;

    private BroadcastReceiver mLocalBroadcastReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();

        }
    };

    private ServiceConnection mConnection = new ServiceConnection() {
        @Override
        public void onServiceConnected(ComponentName name, IBinder service) {
            BluetoothManagementService.LocalBinder binder = (BluetoothManagementService.LocalBinder) service;
            mBluetoothManagementService = binder.getBluetoothManagementServiceInstance();
            mBound = true;
            isRemoteDeviceConnected = isRemoteDeviceConnected();
            TextView textView = (TextView) findViewById(R.id.textView5);
            if(isRemoteDeviceConnected) textView.setText("MASai Box Status: On");
            else textView.setText("MASai Box Status: Off");
        }

        @Override
        public void onServiceDisconnected(ComponentName name) {
            mBound = false;
            Log.i(TAG_INFO, "Service is unbounded");
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_iot_main_pentest);
        mContext = getApplicationContext();
        Intent bindServiceIntent = new Intent(this, BluetoothManagementService.class);
        if(!mBound) {
            bindService(bindServiceIntent, mConnection, Context.BIND_AUTO_CREATE);
        }
        button_setting = (ImageButton)findViewById(R.id.imageButton_setup_box);
        button_device_att = (ImageButton)findViewById(R.id.imageButton_device_att);
        button_router_att = (ImageButton)findViewById(R.id.imageButton_router_att);
        button_bluetooth_att = (ImageButton)findViewById(R.id.imageButton_ble_att);


        button_device_att.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v){
                if(!isRemoteDeviceConnected()) {
                    showRequiredConnection();
                } else openActivity_device_att();
            }
        });

        button_router_att.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v){
                if(!isRemoteDeviceConnected()) {
                    showRequiredConnection();
                } else openActivity_router_att();
            }
        });

        button_setting.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v){
                if(!isRemoteDeviceConnected()) {
                    showRequiredConnection();
                } else openActivity_setting();
            }
        });

        button_bluetooth_att.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v){
                if(!isRemoteDeviceConnected()) {
                    showRequiredConnection();
                } else openActivity_bluetooth_att();
            }
        });


    }

    @Override
    protected void onDestroy() {
        if(mBound){
            unbindService(mConnection);
        }
        super.onDestroy();
    }

    public void openActivity_device_att() {

        Intent intent = new Intent(this,Search_Network.class);

        //Bundle
        Bundle bundle = new Bundle();
        bundle.putString("MyValue", "device_att");
        intent.putExtras(bundle);

        startActivity(intent);

    }
    public void openActivity_router_att() {

        Intent intent = new Intent(this,Search_Network.class);
        //Bundle
        Bundle bundle = new Bundle();
        bundle.putString("MyValue", "router_att");
        intent.putExtras(bundle);
        startActivity(intent);
    }
    public void openActivity_setting() {

        Intent intent = new Intent(this,MasaiSettingActivity.class);
        startActivity(intent);
    }


    public void openActivity_bluetooth_att() {

        Intent intent = new Intent(this,Bluetooth_attackActivity.class);
        startActivity(intent);
    }

    private boolean isRemoteDeviceConnected() {
        if(mBluetoothManagementService != null && mBound) {
            return mBluetoothManagementService.isRemoteDeviceConnected();
        }
        return false;
    }

    private void showRequiredConnection() {
        Toast.makeText(mContext, "Please connect to MASai Box", Toast.LENGTH_SHORT).show();
    }
}